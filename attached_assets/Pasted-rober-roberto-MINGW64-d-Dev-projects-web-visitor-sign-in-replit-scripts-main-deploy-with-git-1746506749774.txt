rober@roberto MINGW64 /d/Dev/projects/web/visitor-sign-in-replit/scripts (main)
$ ./deploy-with-github.sh
=============================================================
     AWS CodePipeline with GitHub for Visitor Sign-In App
=============================================================

Validating AWS credentials...
== Step 1: Collecting Configuration ==
Please provide the following configuration values (press Enter to use defaults):
Enter application name [visitor-sign-in-app]:
Enter environment name (production, staging, development) [production]:
Enter AWS region [us-east-1]:
Enter platform version [Node.js 20]:
Enter instance type [t3.small]:
Enter GitHub repository owner: camara-coder
Enter GitHub repository name: visitor-sign-in-replit
Enter GitHub branch [main]:
Note: You will need to manually activate the GitHub connection in the AWS Console after stack creation.
Enter Elastic Beanstalk application name [visitor-sign-in-app]:
Enter Elastic Beanstalk environment name [visitor-sign-in-app-production]:
Enter S3 artifact bucket name [visitor-sign-in-app-artifacts]:
Enter CloudFormation stack name [visitor-sign-in-app-pipeline]:
Enter database password (min 8 characters):
Confirm database password:
Saving deployment configuration...
Configuration saved to /d/Dev/projects/web/visitor-sign-in-replit/scripts/.deployment-config/20250505-233901-visitor-sign-in-app-pipeline.conf
== Step 2: Setting up IAM roles and policies ==
Detected Windows environment, using Windows-compatible IAM setup script
Running IAM setup script: /d/Dev/projects/web/visitor-sign-in-replit/scripts/setup-iam-policies-windows.sh
Checking AWS credentials...
AWS credentials are valid.
Using AWS Identity:
{
    "UserId": "AROA6D6JBF2QFKQBDRUSJ:rcamara",
    "Account": "970547343008",
    "Arn": "arn:aws:sts::970547343008:assumed-role/AWSReservedSSO_PowerUserAccess_9fc295c26e4be29d/rcamara"
}


Enter application name [visitor-sign-in-app]:
Enter AWS region [us-east-1]:
Enter CodePipeline role name [visitor-sign-in-app-codepipeline-role]:
Enter CodeBuild role name [visitor-sign-in-app-codebuild-role]:
Creating IAM roles and policies...
Creating CodePipeline role...
Creating CodeBuild role...
Creating roles with inline policies...
Creating CodePipeline role visitor-sign-in-app-codepipeline-role...

An error occurred (EntityAlreadyExists) when calling the CreateRole operation: Role with name visitor-sign-in-app-codepipeline-role already exists.
Creating CodeBuild role visitor-sign-in-app-codebuild-role...

An error occurred (EntityAlreadyExists) when calling the CreateRole operation: Role with name visitor-sign-in-app-codebuild-role already exists.
Attaching policies to roles...
Attaching policy to CodePipeline role...
Attaching policy to CodeBuild role...
===========================================================
IAM Setup Complete!
===========================================================
CodePipeline Role: visitor-sign-in-app-codepipeline-role
CodeBuild Role: visitor-sign-in-app-codebuild-role

You can now use these roles in your CloudFormation template.
===========================================================
IAM setup completed successfully.
== Step 3: Creating S3 bucket for artifacts ==
Creating S3 bucket: visitor-sign-in-app-artifacts
make_bucket: visitor-sign-in-app-artifacts
S3 bucket created successfully with versioning and encryption enabled!
== Step 4: Deploying CloudFormation stack for CodePipeline with GitHub ==
This will create or update the following resources:
- CloudFormation Stack:          visitor-sign-in-app-pipeline
- GitHub Connection:             visitor-sign-in-app-github-connection
- GitHub Repository:             camara-coder/visitor-sign-in-replit
- GitHub Branch:                 main
- CodeBuild Project:             visitor-sign-in-app-build
- CodePipeline:                  visitor-sign-in-app-pipeline
- Elastic Beanstalk App:         visitor-sign-in-app
- Elastic Beanstalk Env:         visitor-sign-in-app-production
- S3 Artifact Bucket:            visitor-sign-in-app-artifacts
- Platform:                      Node.js 20
- Instance Type:                 t3.small
NOTE: You will need to manually activate the GitHub connection in AWS Console.

Proceed with deployment? (y/n): y
Deploying CloudFormation stack. This may take 10-15 minutes...

An error occurred (ValidationError) when calling the CreateChangeSet operation: Parameters: [GitHubToken] must have values
