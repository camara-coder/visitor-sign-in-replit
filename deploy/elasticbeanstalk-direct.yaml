AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates Elastic Beanstalk environment for the Visitor Sign-In application with a direct deployment approach'

Parameters:
  AppName:
    Type: String
    Default: visitor-signin-app
    Description: Name of the application

  EnvironmentName:
    Type: String
    Default: production
    Description: Environment name (e.g., development, staging, production)
    AllowedValues:
      - development
      - staging
      - production

  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type for the Elastic Beanstalk environment
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium

  PlatformVersion:
    Type: String
    Default: Node.js 20
    Description: Elastic Beanstalk platform version
    AllowedValues:
      - Node.js 18
      - Node.js 20

  ElasticBeanstalkApplicationName:
    Type: String
    Default: visitor-signin-app
    Description: Name of the Elastic Beanstalk application

  ElasticBeanstalkEnvironmentName:
    Type: String
    Default: visitor-signin-prod
    Description: Name of the Elastic Beanstalk environment

  DatabaseName:
    Type: String
    Default: visitordb
    Description: Name of the database

  DatabaseUsername:
    Type: String
    Default: postgres
    Description: Username for the database

  DatabasePassword:
    Type: String
    NoEcho: true
    Description: Password for the database

  DatabasePort:
    Type: String
    Default: '5432'
    Description: Port for the database connection

  SessionSecret:
    Type: String
    NoEcho: true
    Description: Secret for session management
    Default: 'changeme-use-a-strong-secret'

  EmailServiceEnabled:
    Type: String
    Default: 'false'
    Description: Enable or disable email service
    AllowedValues:
      - 'true'
      - 'false'

Resources:
  # Create a service role for Elastic Beanstalk
  ElasticBeanstalkServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticbeanstalk.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService'

  # Create Elastic Beanstalk application
  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplicationName
      Description: !Sub "Elastic Beanstalk Application for ${AppName}"

  # Create Elastic Beanstalk environment
  ElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      EnvironmentName: !Ref ElasticBeanstalkEnvironmentName
      SolutionStackName: !Sub "64bit Amazon Linux 2 v5.8.0 running ${PlatformVersion}"
      ServiceRole: !Ref ElasticBeanstalkServiceRole
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: !Ref InstanceType
        
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NODE_ENV
          Value: !Ref EnvironmentName
        
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATABASE_NAME
          Value: !Ref DatabaseName
        
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATABASE_USERNAME
          Value: !Ref DatabaseUsername
        
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATABASE_PASSWORD
          Value: !Ref DatabasePassword
        
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATABASE_PORT
          Value: !Ref DatabasePort
        
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SESSION_SECRET
          Value: !Ref SessionSecret
        
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: EMAIL_SERVICE_ENABLED
          Value: !Ref EmailServiceEnabled

        # Add instance profile for EC2 instances
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref InstanceProfile

  # Create IAM role for EC2 instances
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier'
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker'

  # Create instance profile
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

Outputs:
  ApplicationURL:
    Description: URL to the Elastic Beanstalk environment
    Value: !Sub http://${ElasticBeanstalkEnvironment}.${AWS::Region}.elasticbeanstalk.com

  DeploymentInstructions:
    Description: Instructions for deploying to Elastic Beanstalk
    Value: >
      To deploy your application:
      1. Install the EB CLI: pip install awsebcli
      2. Initialize the EB CLI in your project directory: eb init
      3. Deploy to the environment: eb deploy ${ElasticBeanstalkEnvironmentName}